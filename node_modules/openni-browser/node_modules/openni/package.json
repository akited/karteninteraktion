{
  "name": "openni",
  "description": "OpenNI bindings in Node.js.",
  "version": "0.2.7",
  "author": {
    "name": "Pedro Teixeira"
  },
  "main": "openni.js",
  "tags": [
    "kinect",
    "openni",
    "skeleton"
  ],
  "scripts": {
    "preinstall": "node-gyp configure build"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/pgte/node-openni.git"
  },
  "readme": "# node-openni\n\nOpenNI bindings in Node.js.\n\nSupports multiple users.\n\n# Install\n\nInstall libusb and OpenNI following the platform-specific instructions at https://github.com/OpenNI/OpenNI.\n\n(If you're having trouble with this installation, some users have reported that the simple-openni package installs these dependencies successfully:\nhttps://code.google.com/p/simple-openni/wiki/Installation\n)\n\nThen you will have to fork this repo:\n\n```bash\n$ cd node-openni\n$ node-gyp configure build\n```\n\n# Test\n\nPlug in your kinect.\n\nRun:\n\n```bash\n$ node test/base\n```\n\nStay in the surrender position in front of the camera, a couple of meters away.\nAfter you're synced you should see\n\n# Use\n\n## Create Context\n\n```js\nvar OpenNI = require('openni');\n\nvar context = OpenNI();\n```\n\n## Register for user events:\n\n```js\n[\n  'newuser',\n  'userexit',\n  'lostuser',\n  'posedetected',\n  'calibrationstart',\n  'calibrationsucceed',\n  'calibrationfail'\n].forEach(function(eventType) {\n  context.on(eventType, function(userId) {\n    console.log('User %d emitted event: %s', userId, eventType);\n  });\n});\n```\n\n## Register for joint events\n\n```js\n[\n  \"head\",\n  \"neck\",\n  \"torso\",\n  \"waist\",\n  \"left_collar\",\n  \"left_shoulder\",\n  \"left_elbow\",\n  \"left_wrist\",\n  \"left_hand\",\n  \"left_fingertip\",\n  \"right_collar\",\n  \"right_shoulder\",\n  \"right_elbow\",\n  \"right_wrist\",\n  \"right_hand\",\n  \"right_fingertip\",\n  \"left_hip\",\n  \"left_knee\",\n  \"left_ankle\",\n  \"left_foot\",\n  \"right_hip\",\n  \"right_knee\",\n  \"right_ankle\",\n  \"right_foot\"\n].forEach(function(jointName) {\n\n  context.on(jointName, function(user, x, y, z) {\n    console.log(jointName + ' of user %d moved to (%d, %d, %d)', user, x, y, z);\n  });\n\n});\n```\n\n## Close Context\n\n```js\n// Close the context to exit\n\nprocess.on('SIGINT', function() {\n  context.close();\n  process.exit();\n});\n```\n\n## Specify Joints\n\nYou can specify exactly which joints you want to be tracked:\n\n```js\ncontext.setJoints(['head', 'left_hand', 'right_hand']);\n```\n\n# Licence\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "openni@0.2.7",
  "_from": "openni@>=0.2.6"
}
